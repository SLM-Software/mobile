import * as _ from 'lodash';
export var MultiPickerColumn = (function () {
    function MultiPickerColumn(attrs) {
        this.firstOptionValue = 1;
        this.step = 1;
        this.format = MultiPickerColumn.defaultFormat;
        _.merge(this, attrs);
    }
    Object.defineProperty(MultiPickerColumn, "defaultFormat", {
        get: function () {
            return {
                is12: false,
                noons: ['am', 'pm'],
                hours: 24,
                displayFormat: 'DD.MM.YYYY HH:mm',
                pickerFormat: 'DD.MM.YYYY HH:mm'
            };
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(MultiPickerColumn.prototype, "values", {
        get: function () {
            return _.map(this.options, function (option) { return parseInt(option.value); });
        },
        enumerable: true,
        configurable: true
    });
    MultiPickerColumn.prototype.generateOptions = function () {
        this.options = this.range(this.firstOptionValue, this.lastOptionValue);
    };
    MultiPickerColumn.prototype.range = function (from, to) {
        return this.toOptions(_.range(from, to + 1, this.step));
    };
    MultiPickerColumn.prototype.optionText = function (num) {
        return "" + num;
    };
    MultiPickerColumn.prototype.toOption = function (num) {
        return _.extend({ text: this.optionText(num), value: num });
    };
    ;
    MultiPickerColumn.prototype.toOptions = function (nums) {
        var _this = this;
        return nums.map(function (val) { return _this.toOption(val); });
    };
    ;
    return MultiPickerColumn;
}());
//# sourceMappingURL=multi-picker-columns.js.map