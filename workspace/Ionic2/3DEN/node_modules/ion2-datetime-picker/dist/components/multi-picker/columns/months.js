var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as moment from 'moment';
import * as _ from 'lodash';
import { MultiPickerColumn } from '../multi-picker-columns';
export var MultiPickerColumnMonths = (function (_super) {
    __extends(MultiPickerColumnMonths, _super);
    function MultiPickerColumnMonths(attrs) {
        _super.call(this, attrs);
        this.name = 'months';
        this.lastOptionValue = 12;
        this.pickerFormat = MultiPickerColumn.defaultFormat.pickerFormat;
        _.merge(this, attrs);
        this.parseFormat();
    }
    MultiPickerColumnMonths.prototype.optionText = function (num) {
        return moment().month(num - 1).format(this.pickerFormat);
    };
    MultiPickerColumnMonths.prototype.parseFormat = function () {
        this.pickerFormat = this.pickerFormat.match(/M+/)[0];
    };
    return MultiPickerColumnMonths;
}(MultiPickerColumn));
//# sourceMappingURL=months.js.map